#
# A ZSH theme based on a combination of the skwp prezto theme and the robl ohmyzsh theme.
#  * RVM info shown on the right
#  * Git branch info on the left
#  * Single line prompt
#  * Time since last commit on the left
#  * Time in place of user@hostname
#
# Authors:
#   David Rice <me@davidjrice.co.uk>

ZSH_THEME_REP_TIME_SINCE_COMMIT_SHORT="%{$fg[green]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_MEDIUM="%{$fg[yellow]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_LONG="%{$fg[red]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_NEUTRAL="%{$fg[cyan]%}"


################################
##      pwdを省略して返す     ##
################################
function prompt_pwd() {
    local pwd="${PWD/#$HOME/~}"
    if [[ "$pwd" == (#m)[/~] ]]; then
        echo "$MATCH"
        unset MATCH
    else
        echo "${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
    fi
}


#####################################
## 最後のコミットからの時間を返す  ##
#####################################
#function git_time_details() {
#  # only proceed if there is actually a git repository
#  if `git rev-parse --git-dir > /dev/null 2>&1`; then
#    # only proceed if there is actually a commit
#    if [[ $(git log 2>&1 > /dev/null | grep -c "^fatal: bad default revision") == 0 ]]; then
#      # get the last commit hash
#      # lc_hash=`git log --pretty=format:'%h' -1 2> /dev/null`
#      # get the last commit time
#      lc_time=`git log --pretty=format:'%at' -1 2> /dev/null`
#
#      now=`date +%s`
#      seconds_since_last_commit=$((now-lc_time))
#      lc_time_since=`time_since_commit $seconds_since_last_commit`
#
#      echo "$lc_time_since"
#    else
#      echo ""
#    fi
#  else
#    echo ""
#  fi
#}
## returns the time by given seconds
#function time_since_commit() {
#  seconds_since_last_commit=$(($1 + 0))
#
#  # totals
#  MINUTES=$((seconds_since_last_commit / 60))
#  HOURS=$((seconds_since_last_commit/3600))
#
#  # sub-hours and sub-minutes
#  DAYS=$((seconds_since_last_commit / 86400))
#  SUB_HOURS=$((HOURS % 24))
#  SUB_MINUTES=$((MINUTES % 60))
#
#  if [ "$HOURS" -gt 24 ]; then
#    echo "${DAYS}d${SUB_HOURS}h${SUB_MINUTES}m"
#  elif [ "$MINUTES" -gt 60 ]; then
#    echo "${HOURS}h${SUB_MINUTES}m"
#  else
#    echo "${MINUTES}m"
#  fi
#}



##################################
##    rubyのバージョンを返す    ##
##################################
#function rvm_info_for_prompt {
#  if [[ -d ~/.rvm/ ]]; then
#    local ruby_version=$(~/.rvm/bin/rvm-prompt)
#    if [ -n "$ruby_version" ]; then
#      echo "$ruby_version"
#    fi
#  else
#    echo ""
#  fi
#}


#####################################
##   リモートブランチとの差分確認  ##
#####################################
function check_remote_head {
    if [[ ! -z $(git status -sb 2> /dev/null) ]]; then
        local check="$(git status -sb | awk 'NR==1' | awk '{for(i=3;i<=NF;i++){printf("%s%s",$i,OFS="")}}')"
        if [[ "$check" == "commitonmaster" ]] ; then 
            echo " [Initial]"
        else
            check="$(print ${check} | sed -e 's/ahead/↑ /g' |  sed -e 's/behind/↓ /g' | sed -e 's/,//g')"
            echo " ${check}"
        fi
    fi
}


#####################################
##   git管理されていないファイル   ##
#####################################
function prompt_powerline_precmd {
    # Check for untracked files or updated submodules since vcs_info doesn't.
    if [[ ! -z $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
        fmt_branch="%b%u%c%F{yellow}●%f"
    else
        fmt_branch="%b%u%c"
    fi
    zstyle ':vcs_info:*:prompt:*' formats "${fmt_branch}"

    vcs_info 'prompt'
    # RVM_PRECMD_INFO=$(rvm_info_for_prompt)
}


#####################################
##      promptのセットアップ       ##
#####################################
function prompt_powerline_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  add-zsh-hook precmd prompt_powerline_precmd

  # Enable VCS systems you use.
  zstyle ':vcs_info:*' enable bzr git hg svn
  # 使えるメッセージの数
  # zstyle ':vcs_info:*' max-exports 2

  # check-for-changes can be really slow.
  # You should disable it if you work with large repositories.
  zstyle ':vcs_info:*:prompt:*' check-for-changes true

  # Formats:
  # %b - branchname
  # %u - unstagedstr (see below)
  # %c - stagedstr (see below)
  # %a - action (e.g. rebase-i)
  # %R - repository path
  # %S - path in the repository
  # %n - user
  # %m - machine hostname

  local fmt_branch="%F{red}%b%f%u%c"
  local fmt_action="%F{red}%a%f"
  local fmt_unstaged="%F{red}●%f"
  local fmt_staged="%F{green}●%f"

  zstyle ':vcs_info:*:prompt:*' unstagedstr   "${fmt_unstaged}"
  zstyle ':vcs_info:*:prompt:*' stagedstr     "${fmt_staged}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${fmt_branch} ${fmt_action}"
  # zstyle ':vcs_info:*:prompt:*' formats       "${fmt_branch}" #←この行なくても良くない？(よくわからん)
  zstyle ':vcs_info:*:prompt:*' nvcsformats   ""


  POWERLINE_SEPARATOR=$'\u2b80'
  POWERLINE_R_SEPARATOR=$'\u2b82'


  POWERLINE_LEFT_A="%K{green}%F{white} "'$(prompt_pwd)'" %k%f%F{green}%K{blue}"$POWERLINE_SEPARATOR
  # POWERLINE_LEFT_B="%k%f%F{white}%K{blue} "'${vcs_info_msg_0_}'" %k%f%F{blue}%K{magenta}"$POWERLINE_SEPARATOR
  # POWERLINE_LEFT_C=" %k%f%F{white}%K{magenta}"'$(check_remote_head)'" %k%f%F{magenta}"$POWERLINE_SEPARATOR"%f "
  POWERLINE_LEFT_B="%k%f%F{white}%K{blue} "'${vcs_info_msg_0_}$(check_remote_head)'" %k%f%F{blue}"$POWERLINE_SEPARATOR"%f "
  
  # 左プロンプト
  PROMPT=$POWERLINE_LEFT_A$POWERLINE_LEFT_B$POWERLINE_LEFT_C
  # PROMPT=$POWERLINE_LEFT_A$POWERLINE_LEFT_B

  # 右プロンプト
  RPROMPT=""
  # RPROMPT=$POWERLINE_COLOR_FG_WHITE$POWERLINE_R_SEPARATOR"%f$POWERLINE_COLOR_BG_WHITE $POWERLINE_COLOR_FG_GRAY$powerline_right_b "$POWERLINE_R_SEPARATOR"%f%k$POWERLINE_COLOR_BG_GRAY$POWERLINE_COLOR_FG_WHITE $powerline_right_a %f%k"
  # RPROMPT=$POWERLINE_COLOR_FG_WHITE$POWERLINE_R_SEPARATOR"%f$POWERLINE_COLOR_BG_WHITE $POWERLINE_COLOR_FG_GRAY"'$powerline_right_b'" "$POWERLINE_R_SEPARATOR"%f%k$POWERLINE_COLOR_BG_GRAY$POWERLINE_COLOR_FG_WHITE "'$powerline_right_a'" %f%k"
  # RPROMPT=$POWERLINE_COLOR_FG_WHITE$POWERLINE_R_SEPARATOR"%f$POWERLINE_COLOR_BG_WHITE $POWERLINE_COLOR_FG_GRAY"'$(rvm_info_for_prompt)'" "
}

prompt_powerline_setup "$@"

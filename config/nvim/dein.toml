# -----------------------------------------
# 起動時に適用するプラグイン
# -----------------------------------------

# dein自身
[[plugins]]
repo = 'Shougo/dein.vim'


# カラースキーマ
[[plugins]]
repo = 'chriskempson/vim-tomorrow-theme'


# ステータスライン
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = '''
let g:lightline = {
  \ 'colorscheme': 'jellybeans',
  \ 'active': {
  \   'left': [ [ 'mode', 'paste' ],
  \             [ 'fugitive', 'filename', 'readonly', 'cocstatus', 'modified' ] ]
  \ },
  \ 'component': {
  \   'readonly': '%{&filetype=="help"?"":&readonly?"⭤":""}',
  \   'modified': '%{&filetype=="help"?"":&modified?"+":&modifiable?"":"-"}',
  \   'fugitive': '%{exists("*fugitive#head")?fugitive#head():""}',
  \ },
  \ 'component_function': {
  \   'cocstatus': 'coc#status',
  \   'filetype': 'MyFiletype',
  \   'fileformat': 'MyFileformat',
  \ },
  \ 'component_visible_condition': {
  \   'readonly': '(&filetype!="help"&& &readonly)',
  \   'modified': '(&filetype!="help"&&(&modified||!&modifiable))',
  \   'fugitive': '(exists("*fugitive#head") && ""!=fugitive#head())'
  \ },
  \ }
'''


# Gitコマンド
[[plugins]]
repo = 'tpope/vim-fugitive'


# git差分を左側に追加
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_source = '''
" 反映されるまでの時間を変更
set updatetime=200
" defaultのmappingはオフに
let g:gitgutter_map_keys = 0
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '∙'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_modified_removed = '∙'
'''


# ファジー検索
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'


# ヌルヌルページ送り
[[plugins]]
repo = 'yuttie/comfortable-motion.vim'


# LSP
[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'
hook_source = '''
function! s:show_documentation()
  if &filetype == 'vim'
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

let g:coc_status_error_sign = "E:"
let g:coc_status_warning_sign = "W:"
'''


# 不要な空白をハイライト
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'


# Esay motion
[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_source = '''
let g:EasyMotion_do_mapping = 0       " デフォルトのマッピングをオフ
let g:EasyMotion_smartcase = 1        " 検索時大文字小文字を区別しない
let g:EasyMotion_enter_jump_first = 1 " Enterで直近選択
'''


# 軽量ファイラー
[[plugins]]
repo = 'justinmk/vim-dirvish'
hook_source = '''
let g:dirvish_relative_paths = 1
'''

